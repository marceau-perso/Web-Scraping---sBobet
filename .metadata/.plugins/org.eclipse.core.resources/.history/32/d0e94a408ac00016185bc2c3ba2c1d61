package MODEL;


/**
 * 
 * @author K.Misho
 * @date august '15
 * @version 1.0
 */

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import MODEL.XMLBuilder;

public class Scrap {
	//regx expresions
	static  	Pattern pattern 				= null;
	private 	Matcher matcher 				= null;
	private 	Matcher matcher_in 				= null;
	static 		Pattern pattern_in 				= null;
	private 	Matcher matcher_inn 			= null;
	static 		Pattern pattern_inn 			= null;
	private 	Matcher matcher_im 				= null;
	static 		Pattern pattern_im 				= null;
	
	//Found match
	//private 	SboBet_Match new_match 			= null;
	
	// product info
	private 	String page_product 			= "";
	private 	String price	 				= "0";
	private 	double odd 						=  0;
	private 	int quantity	 				=  0;
	
	//the associated product
	private 	Match product					= null;
	
	//the title of the product
	private 	String product_info				="";
	
	// scrapping info
	private 	String link_script 				= null;
	// the confirm button for an item from the webPage
	private 	WebElement confirm_script 		= null;
	private 	WebElement bet_element 			= null;
	private 	java.util.Vector<WebElement> bets_element = null;
	private 	String confirm_id 				= "";
	
	//local WebDriver
	private 	WebDriver driver 				= null;
	
	
	public Scrap(WebDriver driv, Match prod) throws ParseException, InterruptedException{
		driver 			= driv;
		bets_element 	= new Vector<WebElement>();
		product 		= prod;
		//init();
	}
	
	
	
	public WebElement get_stake_script(){
		String _val = "stake";
		WebElement stake_script = driver.findElement(By.id(_val));
		return stake_script;
	}
	
	public void putStake() {
		get_stake_script().sendKeys("100");
		get_confirm_script().click();
	}
	
	public WebElement get_confirm_script(){
		String _val = "tk:tk:submittc";
		WebElement stake_confirm = driver.findElement(By.id(_val));
		return stake_confirm;
	}
	
	
	// Finds the element to be clicked to validate an item
	
	public WebElement getConfirmElement(){
		if(link_script == null) return null;
		if(confirm_id.length() <2) return null;
		driver.navigate().to(link_script);	
		String submit_script = "//a[@id=\""+confirm_id+"\"]";	
		confirm_script = driver.findElement(By.xpath(submit_script));
		return confirm_script;
	}
	public WebElement getConfirmElement_(){
		if(link_script == null) return null;
		driver.navigate().to(link_script);	
		String submit_script = "//input[@id=\"add-to-cart-button\"]";	
		confirm_script = driver.findElement(By.xpath(submit_script));
		return confirm_script;
	}
	
	
	// Finds the Element that describes an item
	public String getLinkElement(){
		
		return link_script;
	}
	
	public double getOdd(){
		return odd;
	}
	
	public String getConfirmID(){
		return confirm_id;
	}

	// after parsing the webpage to find its own page
	/**
	 * Old version of analyzing the site
	 * @return
	 * @throws ParseException
	 * @throws InterruptedException
	 */
	public String getPage() throws ParseException, InterruptedException{
		page_product = driver.getCurrentUrl().toString();
		String page_src = driver.getPageSource();
		pattern = Pattern.compile("<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" class=\"Onex2\">.*?</table>");
		matcher = pattern.matcher(page_src);
		boolean found = false;
		
		System.err.println("\n-------------------------\n");
		while(matcher.find() && !found){
			String mat = matcher.group();
			//System.err.println(" - "+mat);
			pattern_in = Pattern.compile("<tr id=\".*?\">.*?</tr>");
			matcher_in = pattern_in.matcher(mat);
			System.err.println("\n++++++++++++++++++++++++++++++\n");
			while(matcher_in.find() && !found){
				String mat1 = matcher_in.group();
				//System.err.println(" + "+mat1);
				link_script = page_product;
				pattern_inn = Pattern.compile("<td.*?\">.*?</td>");
				matcher_inn = pattern_inn.matcher(mat1);
				System.err.println("\n==========================\n");
				int i= 1;
				while(matcher_inn.find()){
					String mat2 = matcher_inn.group();
				    String team = "";
					pattern_im = Pattern.compile("<span title=\"[a-zA-Z .]+?\" class=\"OddsL\">.*?</span>");
					matcher_im = pattern_im.matcher(mat2);
					while(matcher_im.find()){
						String mat3 = matcher_im.group();
						team = mat3.split(">")[1].split("<")[0];
						System.err.print(" = "+team+"  ");
						//System.err.println("("+mat3+")");
					}
					//System.out.println(product.getHome() +" " + product.getAway() + " = "+ team);
					if(team.equalsIgnoreCase(product.getHome())||team.equalsIgnoreCase(product.getAway()))
						found = true;
					else{
						found = false;
						
					}
					
					if(i==2){
						System.err.print(" = "+"Draw  ");
						i++;
					}
					pattern_im = Pattern.compile("<span class=\"OddsR\">.*?</span>");
					matcher_im = pattern_im.matcher(mat2);
					while(matcher_im.find()){
						String mat3 = matcher_im.group();
						Double odd = Double.parseDouble(mat3.split(">")[1].split("<")[0]);
						this.odd = odd;
						System.err.println(odd);
						if(product.getIssue().equalsIgnoreCase(""+1)){
							if(odd<= Double.parseDouble(product.getOdd_1()))
								System.out.println("1 Ok");
							else
								this.odd = -1;
						}else if(product.getIssue().equalsIgnoreCase(""+2)){
							if(odd<= Double.parseDouble(product.getOdd_1()))
								System.out.println("2 Ok");
							else
								this.odd = -1;
						}else if(product.getIssue().equalsIgnoreCase("x") && i==3){
							if(odd<= Double.parseDouble(product.getOdd_1()))
								System.out.println("3 Ok");
							else
								this.odd = -1;
						}
						i++;
					}
					
					
					pattern_im = Pattern.compile("id=\".*?\">");
					matcher_im = pattern_im.matcher(mat2);
					while(matcher_im.find()){
						String mat3 = matcher_im.group();
						
						if(product.getIssue().equalsIgnoreCase(""+(i-1))){
							confirm_id = mat3.split("\"")[1];
							System.out.println("k1 "+confirm_id);
						}else if(product.getIssue().equalsIgnoreCase(""+(i-3))&&((i-3)!=1)){
							
							confirm_id = mat3.split("\"")[1];
							System.out.println("k2 "+confirm_id);
							
						}
						else if(product.getIssue().equalsIgnoreCase("x") && i==4){
							
							confirm_id = mat3.split("\"")[1];
							System.out.println("k3 "+confirm_id);
						}
						//System.err.println("Script "+confirm_id);
						
					}
					if(i>2&& found == true)
						if(this.odd!=-1){							
							return page_product;
						}
						else{
							link_script = null;
							return "";
						}
					
				}
				System.err.println("\n==========================\n");
			}
			//System.err.println("\n++++++++++++++++++++++++++++++\n");
		}
		//System.out.println(page_src);
		
		System.err.println("\n-------------------------\n");
		
		return page_product;
	}
	public String getPage_() throws ParseException, InterruptedException{
		boolean first = true;
		int count = 0;					// number of occurrences to be stored	
		String page = "";				// the source of the webPage
		
		page_product = driver.getCurrentUrl().toString();
		pattern = Pattern.compile("<a href=\"h[a-zA-Z0-9:/=_?!&;%\"\\s.-]+?\" title=\".*?\".*?EUR .*?[< ]");
		
		
		driver.navigate().to(page_product);		// reload page
		page = driver.getPageSource();
		
		//System.out.println(page.length());
		matcher = pattern.matcher(page);
		double min = Double.parseDouble(product.getOdd_1());
		while (matcher.find() && count<4) {
			//if((matcher.group()).indexOf(product.getProduct())>=0){
			if((matcher.group()).indexOf(product.getHome())>=0 && (matcher.group()).indexOf("EUR")>=0){
			/*	if(first) {		
					// sets the link of this product : (from the regx the URL at the 3 index)
					link_script = matcher.group().split("\"")[1];
					first=false;
				}
			*/	
				//System.err.println(".......... - "+product.getProduct()+" - ............");
			   // System.out.println(matcher.group().split("\"")[1]);
			    int idx = (matcher.group()).indexOf("EUR");
			    String str = (matcher.group()).substring(idx, idx+8);
			    NumberFormat format = NumberFormat.getInstance(Locale.FRANCE);
			    Number number = format.parse(str.split(" ")[1]);
			    double d = number.doubleValue();
			    System.err.println("EUR " + d);
			   
			    if(d<min) {
			    	min = d;
					// sets the link of this product : (from the regx the URL at the 3 index)
					link_script = matcher.group().split("\"")[1];

					first=false;
				}

			    count++;
			}
		}
		return page_product;
	}
	
	public void writeFile(String content){
		try {
			
			File file = new File("/users/idinter/Desktop/GI04/filename.txt");
 
			// if file doesnt exists, then create it
			if (!file.exists()) {
				file.createNewFile();
			}
 
			FileWriter fw = new FileWriter(file.getAbsoluteFile());
			BufferedWriter bw = new BufferedWriter(fw);
			bw.write(content);
			bw.close();
 
			System.out.println("Done");
 
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	///
	
	// after parsing the webpage
	public Match getProduct(){
		return product;
	}
	
	public String getInfo(){
		if(link_script == null) return "";
		driver.navigate().to(link_script);	

		// to be developped
		String info = "\"productTitle\"";
		
		//matcher = pattern.matcher(driver.getPageSource());
		
		String submit_script = "//span[@id=\"productTitle\"]";	
		WebElement prod_info = driver.findElement(By.xpath(submit_script));
		product_info = prod_info.getText();
		
		return product_info;
	}

	// after parsing the webpage
	public String getPrice(){
		if(link_script == null) return "";
		// to be developped
		driver.navigate().to(link_script);	
		String info = "\"priceblock_ourprice\"";
		
		//matcher = pattern.matcher(driver.getPageSource());
		
		String submit_script = "//span[@id="+info+"]";	
		WebElement price_info = driver.findElement(By.xpath(submit_script));
		price = price_info.getText();
		return price;
	}
	public void closeBrowser() {
		driver.close();
	}
}
